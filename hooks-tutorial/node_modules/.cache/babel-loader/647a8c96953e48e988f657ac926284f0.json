{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nick1\\\\Handling_React\\\\hooks-tutorial\\\\src\\\\Average.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getAverage = numbers => {\n  console.log(\"평균값 계산 중..\");\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  console.log(\"sum: \" + sum);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const inputEl = useRef(null);\n  const onChange = useCallback(e => setNumber(e.target.value), []);\n  const onInsert = useCallback(() => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber(\"\");\n    inputEl.current.focus();\n  }, [number, list]);\n  const avg = useMemo(() => getAverage(list), [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onChange: onChange,\n      ref: inputEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), avg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Average, \"/mjbPIC5TZullY/9c7eXkzWYvmE=\");\n\n_c = Average;\nexport default Average;\n\nvar _c;\n\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"sources":["C:/Users/nick1/Handling_React/hooks-tutorial/src/Average.js"],"names":["React","useState","useMemo","useCallback","useRef","getAverage","numbers","console","log","length","sum","reduce","a","b","Average","list","setList","number","setNumber","inputEl","onChange","e","target","value","onInsert","nextList","concat","parseInt","current","focus","avg","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,MAAhD,QAA8D,OAA9D;;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,MAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B,OAAO,CAAP;AAC1B,QAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,CAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUE,GAAtB;AACA,SAAOA,GAAG,GAAGJ,OAAO,CAACG,MAArB;AACD,CAND;;AAQA,MAAMK,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMkB,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAMgB,QAAQ,GAAGjB,WAAW,CAAEkB,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAAmC,EAAnC,CAA5B;AAEA,QAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAM;AACjC,UAAMsB,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAYC,QAAQ,CAACV,MAAD,CAApB,CAAjB;AACAD,IAAAA,OAAO,CAACS,QAAD,CAAP;AACAP,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,CAACS,OAAR,CAAgBC,KAAhB;AACD,GAL2B,EAKzB,CAACZ,MAAD,EAASF,IAAT,CALyB,CAA5B;AAOA,QAAMe,GAAG,GAAG5B,OAAO,CAAC,MAAMG,UAAU,CAACU,IAAD,CAAjB,EAAyB,CAACA,IAAD,CAAzB,CAAnB;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEE,MAAd;AAAsB,MAAA,QAAQ,EAAEG,QAAhC;AAA0C,MAAA,GAAG,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGT,IAAI,CAACgB,GAAL,CAAS,CAACR,KAAD,EAAQS,KAAR,kBACR;AAAA,kBAAiBT;AAAjB,SAASS,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD;;GAAMhB,O;;KAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useMemo, useCallback, useRef } from \"react\";\r\n\r\nconst getAverage = (numbers) => {\r\n  console.log(\"평균값 계산 중..\");\r\n  if (numbers.length === 0) return 0;\r\n  const sum = numbers.reduce((a, b) => a + b);\r\n  console.log(\"sum: \" + sum);\r\n  return sum / numbers.length;\r\n};\r\n\r\nconst Average = () => {\r\n  const [list, setList] = useState([]);\r\n  const [number, setNumber] = useState(\"\");\r\n  const inputEl = useRef(null);\r\n\r\n  const onChange = useCallback((e) => setNumber(e.target.value), []);\r\n\r\n  const onInsert = useCallback(() => {\r\n    const nextList = list.concat(parseInt(number));\r\n    setList(nextList);\r\n    setNumber(\"\");\r\n    inputEl.current.focus();\r\n  }, [number, list]);\r\n\r\n  const avg = useMemo(() => getAverage(list), [list]);\r\n  return (\r\n    <div>\r\n      <input value={number} onChange={onChange} ref={inputEl} />\r\n      <button onClick={onInsert}>등록</button>\r\n      <ul>\r\n        {list.map((value, index) => (\r\n          <li key={index}>{value}</li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <b>평균값:</b>\r\n        {avg}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Average;\r\n"]},"metadata":{},"sourceType":"module"}